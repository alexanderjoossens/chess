add_test( [==[Squares can be created from valid coordinates]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Squares can be created from valid coordinates]==]  )
set_tests_properties( [==[Squares can be created from valid coordinates]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Squares are not created from invalid coordinates]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Squares are not created from invalid coordinates]==]  )
set_tests_properties( [==[Squares are not created from invalid coordinates]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Squares can be created from valid indices]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Squares can be created from valid indices]==]  )
set_tests_properties( [==[Squares can be created from valid indices]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Squares are not created from invalid indices]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Squares are not created from invalid indices]==]  )
set_tests_properties( [==[Squares are not created from invalid indices]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Squares can be created from valid names]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Squares can be created from valid names]==]  )
set_tests_properties( [==[Squares can be created from valid names]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Squares are not created from invalid names]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Squares are not created from invalid names]==]  )
set_tests_properties( [==[Squares are not created from invalid names]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Squares stream their name correctly]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Squares stream their name correctly]==]  )
set_tests_properties( [==[Squares stream their name correctly]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Moves store the squares they are constructed with]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Moves store the squares they are constructed with]==]  )
set_tests_properties( [==[Moves store the squares they are constructed with]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Moves store the promotion they are constructed with]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Moves store the promotion they are constructed with]==]  )
set_tests_properties( [==[Moves store the promotion they are constructed with]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Moves support equality checks]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Moves support equality checks]==]  )
set_tests_properties( [==[Moves support equality checks]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Moves with promotions support equality checks]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Moves with promotions support equality checks]==]  )
set_tests_properties( [==[Moves with promotions support equality checks]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Moves stream their UCI correctly]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Moves stream their UCI correctly]==]  )
set_tests_properties( [==[Moves stream their UCI correctly]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Moves with promotions stream their UCI correctly]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Moves with promotions stream their UCI correctly]==]  )
set_tests_properties( [==[Moves with promotions stream their UCI correctly]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Moves can be created from valid UCI notation]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Moves can be created from valid UCI notation]==]  )
set_tests_properties( [==[Moves can be created from valid UCI notation]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Moves can be created from valid UCI notation with promotion]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Moves can be created from valid UCI notation with promotion]==]  )
set_tests_properties( [==[Moves can be created from valid UCI notation with promotion]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Moves are not created from invalid UCI notation]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Moves are not created from invalid UCI notation]==]  )
set_tests_properties( [==[Moves are not created from invalid UCI notation]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Pieces store color and type correctly]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Pieces store color and type correctly]==]  )
set_tests_properties( [==[Pieces store color and type correctly]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Pieces can be created from valid symbols]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Pieces can be created from valid symbols]==]  )
set_tests_properties( [==[Pieces can be created from valid symbols]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Pieces are not created from invalid symbols]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Pieces are not created from invalid symbols]==]  )
set_tests_properties( [==[Pieces are not created from invalid symbols]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Pieces stream their symbol correctly]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Pieces stream their symbol correctly]==]  )
set_tests_properties( [==[Pieces stream their symbol correctly]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[PieceColor can be inverted correctly]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[PieceColor can be inverted correctly]==]  )
set_tests_properties( [==[PieceColor can be inverted correctly]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[A default-constructed board is empty]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[A default-constructed board is empty]==]  )
set_tests_properties( [==[A default-constructed board is empty]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Pieces can be set on a board]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Pieces can be set on a board]==]  )
set_tests_properties( [==[Pieces can be set on a board]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[The turn can be set on a board]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[The turn can be set on a board]==]  )
set_tests_properties( [==[The turn can be set on a board]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Pseudo-legal knight moves, empty board]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Pseudo-legal knight moves\, empty board]==]  )
set_tests_properties( [==[Pseudo-legal knight moves, empty board]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Pseudo-legal knight moves, side of board]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Pseudo-legal knight moves\, side of board]==]  )
set_tests_properties( [==[Pseudo-legal knight moves, side of board]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Pseudo-legal knight moves, captures]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Pseudo-legal knight moves\, captures]==]  )
set_tests_properties( [==[Pseudo-legal knight moves, captures]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Pseudo-legal king moves, empty board]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Pseudo-legal king moves\, empty board]==]  )
set_tests_properties( [==[Pseudo-legal king moves, empty board]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Pseudo-legal king moves, side of board]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Pseudo-legal king moves\, side of board]==]  )
set_tests_properties( [==[Pseudo-legal king moves, side of board]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Pseudo-legal king moves, captures]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Pseudo-legal king moves\, captures]==]  )
set_tests_properties( [==[Pseudo-legal king moves, captures]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Pseudo-legal bishop moves, empty board]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Pseudo-legal bishop moves\, empty board]==]  )
set_tests_properties( [==[Pseudo-legal bishop moves, empty board]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Pseudo-legal bishop moves, captures]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Pseudo-legal bishop moves\, captures]==]  )
set_tests_properties( [==[Pseudo-legal bishop moves, captures]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Pseudo-legal rook moves, empty board]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Pseudo-legal rook moves\, empty board]==]  )
set_tests_properties( [==[Pseudo-legal rook moves, empty board]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Pseudo-legal rook moves, captures]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Pseudo-legal rook moves\, captures]==]  )
set_tests_properties( [==[Pseudo-legal rook moves, captures]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Pseudo-legal queen moves, empty board]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Pseudo-legal queen moves\, empty board]==]  )
set_tests_properties( [==[Pseudo-legal queen moves, empty board]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Pseudo-legal queen moves, captures]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Pseudo-legal queen moves\, captures]==]  )
set_tests_properties( [==[Pseudo-legal queen moves, captures]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Pseudo-legal pawn moves, step, empty board]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Pseudo-legal pawn moves\, step\, empty board]==]  )
set_tests_properties( [==[Pseudo-legal pawn moves, step, empty board]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Pseudo-legal pawn moves, step, opponent blocked]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Pseudo-legal pawn moves\, step\, opponent blocked]==]  )
set_tests_properties( [==[Pseudo-legal pawn moves, step, opponent blocked]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Pseudo-legal pawn moves, step, self blocked]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Pseudo-legal pawn moves\, step\, self blocked]==]  )
set_tests_properties( [==[Pseudo-legal pawn moves, step, self blocked]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Pseudo-legal pawn moves, capture left]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Pseudo-legal pawn moves\, capture left]==]  )
set_tests_properties( [==[Pseudo-legal pawn moves, capture left]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Pseudo-legal pawn moves, capture both]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Pseudo-legal pawn moves\, capture both]==]  )
set_tests_properties( [==[Pseudo-legal pawn moves, capture both]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Pseudo-legal pawn moves, base step, empty board]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Pseudo-legal pawn moves\, base step\, empty board]==]  )
set_tests_properties( [==[Pseudo-legal pawn moves, base step, empty board]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Pseudo-legal pawn moves, base step, blocked 1]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Pseudo-legal pawn moves\, base step\, blocked 1]==]  )
set_tests_properties( [==[Pseudo-legal pawn moves, base step, blocked 1]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Pseudo-legal pawn moves, base step, blocked 2]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Pseudo-legal pawn moves\, base step\, blocked 2]==]  )
set_tests_properties( [==[Pseudo-legal pawn moves, base step, blocked 2]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Pseudo-legal pawn moves, en enpassant_index, black left]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Pseudo-legal pawn moves\, en enpassant_index\, black left]==]  )
set_tests_properties( [==[Pseudo-legal pawn moves, en enpassant_index, black left]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Pseudo-legal pawn moves, en enpassant_index, black right]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Pseudo-legal pawn moves\, en enpassant_index\, black right]==]  )
set_tests_properties( [==[Pseudo-legal pawn moves, en enpassant_index, black right]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Pseudo-legal pawn moves, en enpassant_index, white left]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Pseudo-legal pawn moves\, en enpassant_index\, white left]==]  )
set_tests_properties( [==[Pseudo-legal pawn moves, en enpassant_index, white left]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Pseudo-legal pawn moves, en enpassant_index, white right]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Pseudo-legal pawn moves\, en enpassant_index\, white right]==]  )
set_tests_properties( [==[Pseudo-legal pawn moves, en enpassant_index, white right]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Pseudo-legal pawn moves, en enpassant_index, black both]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Pseudo-legal pawn moves\, en enpassant_index\, black both]==]  )
set_tests_properties( [==[Pseudo-legal pawn moves, en enpassant_index, black both]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Pseudo-legal pawn moves, en enpassant_index, white both]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Pseudo-legal pawn moves\, en enpassant_index\, white both]==]  )
set_tests_properties( [==[Pseudo-legal pawn moves, en enpassant_index, white both]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Pseudo-legal pawn moves, en enpassant_index, wrong square]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Pseudo-legal pawn moves\, en enpassant_index\, wrong square]==]  )
set_tests_properties( [==[Pseudo-legal pawn moves, en enpassant_index, wrong square]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Pseudo-legal pawn moves, visual en enpassant_index, no square]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Pseudo-legal pawn moves\, visual en enpassant_index\, no square]==]  )
set_tests_properties( [==[Pseudo-legal pawn moves, visual en enpassant_index, no square]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Pseudo-legal pawn moves, white promotions]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Pseudo-legal pawn moves\, white promotions]==]  )
set_tests_properties( [==[Pseudo-legal pawn moves, white promotions]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Pseudo-legal pawn moves, black promotions]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Pseudo-legal pawn moves\, black promotions]==]  )
set_tests_properties( [==[Pseudo-legal pawn moves, black promotions]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Pseudo-legal castling moves, white kingside]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Pseudo-legal castling moves\, white kingside]==]  )
set_tests_properties( [==[Pseudo-legal castling moves, white kingside]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Pseudo-legal castling moves, white queenside]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Pseudo-legal castling moves\, white queenside]==]  )
set_tests_properties( [==[Pseudo-legal castling moves, white queenside]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Pseudo-legal castling moves, black kingside]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Pseudo-legal castling moves\, black kingside]==]  )
set_tests_properties( [==[Pseudo-legal castling moves, black kingside]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Pseudo-legal castling moves, black queenside]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Pseudo-legal castling moves\, black queenside]==]  )
set_tests_properties( [==[Pseudo-legal castling moves, black queenside]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Pseudo-legal castling moves, kingside blocked]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Pseudo-legal castling moves\, kingside blocked]==]  )
set_tests_properties( [==[Pseudo-legal castling moves, kingside blocked]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Pseudo-legal castling moves, queenside blocked]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Pseudo-legal castling moves\, queenside blocked]==]  )
set_tests_properties( [==[Pseudo-legal castling moves, queenside blocked]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Pseudo-legal castling moves, kingside attacked]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Pseudo-legal castling moves\, kingside attacked]==]  )
set_tests_properties( [==[Pseudo-legal castling moves, kingside attacked]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Pseudo-legal castling moves, queenside attacked]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Pseudo-legal castling moves\, queenside attacked]==]  )
set_tests_properties( [==[Pseudo-legal castling moves, queenside attacked]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Pseudo-legal castling moves, queenside rook attacked]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Pseudo-legal castling moves\, queenside rook attacked]==]  )
set_tests_properties( [==[Pseudo-legal castling moves, queenside rook attacked]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Pseudo-legal castling moves, kingside rook attacked]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Pseudo-legal castling moves\, kingside rook attacked]==]  )
set_tests_properties( [==[Pseudo-legal castling moves, kingside rook attacked]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Pseudo-legal castling moves, queenside b-square attacked]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Pseudo-legal castling moves\, queenside b-square attacked]==]  )
set_tests_properties( [==[Pseudo-legal castling moves, queenside b-square attacked]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Pseudo-legal castling moves, no rights]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Pseudo-legal castling moves\, no rights]==]  )
set_tests_properties( [==[Pseudo-legal castling moves, no rights]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Move making moves a piece on the board]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Move making moves a piece on the board]==]  )
set_tests_properties( [==[Move making moves a piece on the board]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Move making supports captures]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Move making supports captures]==]  )
set_tests_properties( [==[Move making supports captures]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Move making, white promotion]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Move making\, white promotion]==]  )
set_tests_properties( [==[Move making, white promotion]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Move making, black promotion]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Move making\, black promotion]==]  )
set_tests_properties( [==[Move making, black promotion]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Move making, castling white kingside]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Move making\, castling white kingside]==]  )
set_tests_properties( [==[Move making, castling white kingside]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Move making, castling white queenside]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Move making\, castling white queenside]==]  )
set_tests_properties( [==[Move making, castling white queenside]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Move making, castling black kingside]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Move making\, castling black kingside]==]  )
set_tests_properties( [==[Move making, castling black kingside]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Move making, castling black queenside]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Move making\, castling black queenside]==]  )
set_tests_properties( [==[Move making, castling black queenside]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Move making, castling rights king move]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Move making\, castling rights king move]==]  )
set_tests_properties( [==[Move making, castling rights king move]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Move making, castling rights rook move]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Move making\, castling rights rook move]==]  )
set_tests_properties( [==[Move making, castling rights rook move]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Move making, castling rights rook capture]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Move making\, castling rights rook capture]==]  )
set_tests_properties( [==[Move making, castling rights rook capture]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Move making, castling rights king back to base]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Move making\, castling rights king back to base]==]  )
set_tests_properties( [==[Move making, castling rights king back to base]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Move making, en enpassant_index, black left]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Move making\, en enpassant_index\, black left]==]  )
set_tests_properties( [==[Move making, en enpassant_index, black left]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Move making, en enpassant_index, black right]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Move making\, en enpassant_index\, black right]==]  )
set_tests_properties( [==[Move making, en enpassant_index, black right]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Move making, en enpassant_index, white left]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Move making\, en enpassant_index\, white left]==]  )
set_tests_properties( [==[Move making, en enpassant_index, white left]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Move making, en enpassant_index, white right]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Move making\, en enpassant_index\, white right]==]  )
set_tests_properties( [==[Move making, en enpassant_index, white right]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Move making, en enpassant_index square, white double step update]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Move making\, en enpassant_index square\, white double step update]==]  )
set_tests_properties( [==[Move making, en enpassant_index square, white double step update]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Move making, en enpassant_index square, black double step update]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Move making\, en enpassant_index square\, black double step update]==]  )
set_tests_properties( [==[Move making, en enpassant_index square, black double step update]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Move making, en enpassant_index square, remove after capture]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Move making\, en enpassant_index square\, remove after capture]==]  )
set_tests_properties( [==[Move making, en enpassant_index square, remove after capture]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Move making, en enpassant_index square, remove after move]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Move making\, en enpassant_index square\, remove after move]==]  )
set_tests_properties( [==[Move making, en enpassant_index square, remove after move]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Pseudo-legal moves, multiple pieces, white]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Pseudo-legal moves\, multiple pieces\, white]==]  )
set_tests_properties( [==[Pseudo-legal moves, multiple pieces, white]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Pseudo-legal moves, multiple pieces, black]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Pseudo-legal moves\, multiple pieces\, black]==]  )
set_tests_properties( [==[Pseudo-legal moves, multiple pieces, black]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Legal placements are correctly parsed]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Legal placements are correctly parsed]==]  )
set_tests_properties( [==[Legal placements are correctly parsed]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Legal turns are correctly parsed]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Legal turns are correctly parsed]==]  )
set_tests_properties( [==[Legal turns are correctly parsed]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Castling rights are correctly parsed]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Castling rights are correctly parsed]==]  )
set_tests_properties( [==[Castling rights are correctly parsed]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[En enpassant_index square is correctly parsed]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[En enpassant_index square is correctly parsed]==]  )
set_tests_properties( [==[En enpassant_index square is correctly parsed]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Engine detects checkmate]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Engine detects checkmate]==]  )
set_tests_properties( [==[Engine detects checkmate]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
add_test( [==[Engine detects stalemate]==] /home/alexander/cplchess-r0748533/cmake-build-debug/Tests/tests [==[Engine detects stalemate]==]  )
set_tests_properties( [==[Engine detects stalemate]==] PROPERTIES WORKING_DIRECTORY /home/alexander/cplchess-r0748533/cmake-build-debug/Tests)
set( tests_TESTS [==[Squares can be created from valid coordinates]==] [==[Squares are not created from invalid coordinates]==] [==[Squares can be created from valid indices]==] [==[Squares are not created from invalid indices]==] [==[Squares can be created from valid names]==] [==[Squares are not created from invalid names]==] [==[Squares stream their name correctly]==] [==[Moves store the squares they are constructed with]==] [==[Moves store the promotion they are constructed with]==] [==[Moves support equality checks]==] [==[Moves with promotions support equality checks]==] [==[Moves stream their UCI correctly]==] [==[Moves with promotions stream their UCI correctly]==] [==[Moves can be created from valid UCI notation]==] [==[Moves can be created from valid UCI notation with promotion]==] [==[Moves are not created from invalid UCI notation]==] [==[Pieces store color and type correctly]==] [==[Pieces can be created from valid symbols]==] [==[Pieces are not created from invalid symbols]==] [==[Pieces stream their symbol correctly]==] [==[PieceColor can be inverted correctly]==] [==[A default-constructed board is empty]==] [==[Pieces can be set on a board]==] [==[The turn can be set on a board]==] [==[Pseudo-legal knight moves, empty board]==] [==[Pseudo-legal knight moves, side of board]==] [==[Pseudo-legal knight moves, captures]==] [==[Pseudo-legal king moves, empty board]==] [==[Pseudo-legal king moves, side of board]==] [==[Pseudo-legal king moves, captures]==] [==[Pseudo-legal bishop moves, empty board]==] [==[Pseudo-legal bishop moves, captures]==] [==[Pseudo-legal rook moves, empty board]==] [==[Pseudo-legal rook moves, captures]==] [==[Pseudo-legal queen moves, empty board]==] [==[Pseudo-legal queen moves, captures]==] [==[Pseudo-legal pawn moves, step, empty board]==] [==[Pseudo-legal pawn moves, step, opponent blocked]==] [==[Pseudo-legal pawn moves, step, self blocked]==] [==[Pseudo-legal pawn moves, capture left]==] [==[Pseudo-legal pawn moves, capture both]==] [==[Pseudo-legal pawn moves, base step, empty board]==] [==[Pseudo-legal pawn moves, base step, blocked 1]==] [==[Pseudo-legal pawn moves, base step, blocked 2]==] [==[Pseudo-legal pawn moves, en enpassant_index, black left]==] [==[Pseudo-legal pawn moves, en enpassant_index, black right]==] [==[Pseudo-legal pawn moves, en enpassant_index, white left]==] [==[Pseudo-legal pawn moves, en enpassant_index, white right]==] [==[Pseudo-legal pawn moves, en enpassant_index, black both]==] [==[Pseudo-legal pawn moves, en enpassant_index, white both]==] [==[Pseudo-legal pawn moves, en enpassant_index, wrong square]==] [==[Pseudo-legal pawn moves, visual en enpassant_index, no square]==] [==[Pseudo-legal pawn moves, white promotions]==] [==[Pseudo-legal pawn moves, black promotions]==] [==[Pseudo-legal castling moves, white kingside]==] [==[Pseudo-legal castling moves, white queenside]==] [==[Pseudo-legal castling moves, black kingside]==] [==[Pseudo-legal castling moves, black queenside]==] [==[Pseudo-legal castling moves, kingside blocked]==] [==[Pseudo-legal castling moves, queenside blocked]==] [==[Pseudo-legal castling moves, kingside attacked]==] [==[Pseudo-legal castling moves, queenside attacked]==] [==[Pseudo-legal castling moves, queenside rook attacked]==] [==[Pseudo-legal castling moves, kingside rook attacked]==] [==[Pseudo-legal castling moves, queenside b-square attacked]==] [==[Pseudo-legal castling moves, no rights]==] [==[Move making moves a piece on the board]==] [==[Move making supports captures]==] [==[Move making, white promotion]==] [==[Move making, black promotion]==] [==[Move making, castling white kingside]==] [==[Move making, castling white queenside]==] [==[Move making, castling black kingside]==] [==[Move making, castling black queenside]==] [==[Move making, castling rights king move]==] [==[Move making, castling rights rook move]==] [==[Move making, castling rights rook capture]==] [==[Move making, castling rights king back to base]==] [==[Move making, en enpassant_index, black left]==] [==[Move making, en enpassant_index, black right]==] [==[Move making, en enpassant_index, white left]==] [==[Move making, en enpassant_index, white right]==] [==[Move making, en enpassant_index square, white double step update]==] [==[Move making, en enpassant_index square, black double step update]==] [==[Move making, en enpassant_index square, remove after capture]==] [==[Move making, en enpassant_index square, remove after move]==] [==[Pseudo-legal moves, multiple pieces, white]==] [==[Pseudo-legal moves, multiple pieces, black]==] [==[Legal placements are correctly parsed]==] [==[Legal turns are correctly parsed]==] [==[Castling rights are correctly parsed]==] [==[En enpassant_index square is correctly parsed]==] [==[Engine detects checkmate]==] [==[Engine detects stalemate]==])
